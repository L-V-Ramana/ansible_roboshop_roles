- name: Disable mongodb module
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable nodejs module
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package:
   name: nodejs
   state: present

- name: create user
  ansible.builtin.user:
    name: roboshop
    home: /app
    shell: sbin/nologin
    system: yes

- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: /app
    state: directory

- name: download app
  ansible.builtin.get_url:
   url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
   dest: /tmp/catalogue.zip

- name: unzipping app
  ansible.builtin.unarchive:
   src: /tmp/catalogue.zip
   dest: /app
   remote_src: yes

- name: Install "catalogue" node.js package.
  community.general.npm:
    path: /app

- name: copying catalogue.service to systemd
  ansible.builtin.copy:
    src: catalogue.service.j2
    dest: /etc/systemd/system/catalogue.service

- name: system daemon reload
  ansible.builtin.systemd_service:
   daemon_reload: true

- name: cataloge restart and enable
  ansible.builtin.service:
    name: catalogue 
    state: restatrted
    enabled: yes

- name: copying mongo.repo
  ansible.builtin.copy:
   src: mongo.repo
   dest: /etc/yum.repos.d/mongo.repo

- name: installing mongodb client
  ansible.builtin.package:
    name: mongodb-mongosh
    state: present

- name: check products loaded or not
  ansible.builtin.command: mongosh --host mongodb.ramana.site --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
  register: catalogue_output

- name: print catalogue output
  ansible.builtin.debug:
    msg: "{{ catalogue_output }}"

- name: load products
  ansible.builtin.shell: mongosh --host mongodb.ramana.site < /app/db/master-data.js
  when: catalogue_output.stdout | int < 0
  

